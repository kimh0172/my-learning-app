import type { Week } from "../domain/entities/Week";

const curriculum: Week[] = [
{ id: 1, phase: 'Phase 0', title: 'JS cƒÉn b·∫£n: bi·∫øn, ki·ªÉu d·ªØ li·ªáu, to√°n t·ª≠', goals: ['let/const', 'number/string/boolean', 'to√°n t·ª≠ + so s√°nh'], resources: [ { title: 'freeCodeCamp ‚Äì JS Basics', url: 'https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/' }, { title: 'MDN ‚Äì Data types', url: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures' } ], tasks: ['Vi·∫øt b·∫£ng c·ª≠u ch∆∞∆°ng 1‚Äì9', 'Gi·∫£i 10 b√†i luy·ªán t·∫≠p c∆° b·∫£n'] },
{ id: 2, phase: 'Phase 0', title: 'H√†m, v√≤ng l·∫∑p, m·∫£ng, object', goals: ['function', 'for/while', 'array methods', 'object literal'], resources: [ { title: 'MDN ‚Äì Arrays', url: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array' }, { title: 'MDN ‚Äì Objects', url: 'https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Basics' } ], tasks: ['H√†m findMax(arr)', 'H√†m sum(arr)'] },
{ id: 3, phase: 'Phase 0', title: 'TypeScript c∆° b·∫£n', goals: ['type annotation', 'interface', 'union type'], resources: [ { title: 'TypeScript Handbook ‚Äì Basic Types', url: 'https://www.typescriptlang.org/docs/handbook/2/everyday-types.html' } ], tasks: ['H√†m greet(user: { name: string; age: number })'] },
{ id: 4, phase: 'Phase 0', title: 'Async JS: Promise, async/await', goals: ['Promise', 'async/await', 'fetch API c∆° b·∫£n'], resources: [ { title: 'MDN ‚Äì Using Promises', url: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises' }, { title: 'JSONPlaceholder API', url: 'https://jsonplaceholder.typicode.com/' } ], tasks: ['In 5 ti√™u ƒë·ªÅ post ƒë·∫ßu ti√™n t·ª´ JSONPlaceholder'] },
{ id: 5, phase: 'Phase 1', title: 'HTML: c·∫•u tr√∫c & semantic', goals: ['th·∫ª c∆° b·∫£n', 'semantic HTML', 'forms'], resources: [ { title: 'MDN ‚Äì HTML Basics', url: 'https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML' } ], tasks: ['T·∫°o CV b·∫±ng HTML'] },
{ id: 6, phase: 'Phase 1', title: 'CSS: Flexbox, Grid, Responsive', goals: ['flexbox', 'grid', 'media queries'], resources: [ { title: 'CSS-Tricks ‚Äì Flexbox Guide', url: 'https://css-tricks.com/snippets/css/a-guide-to-flexbox/' }, { title: 'MDN ‚Äì CSS Grid', url: 'https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids' } ], tasks: ['Layout 2 c·ªôt (sidebar + content)'] },
{ id: 7, phase: 'Phase 1', title: 'DOM & Events', goals: ['querySelector', 'addEventListener', 'classList'], resources: [ { title: 'MDN ‚Äì Introduction to the DOM', url: 'https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction' } ], tasks: ['Dark mode toggle (thay ƒë·ªïi theme)'] },
{ id: 8, phase: 'Phase 1', title: '√în t·∫≠p & Portfolio', goals: ['t·ªïng h·ª£p HTML/CSS/JS', 'tri·ªÉn khai static site'], resources: [ { title: 'GitHub Pages ‚Äì Guide', url: 'https://pages.github.com/' } ], tasks: ['Portfolio c√° nh√¢n v√† deploy l√™n GitHub Pages'] },
{ id: 9, phase: 'Phase 2', title: 'React: Components & Props', goals: ['JSX', 'component', 'props'], resources: [ { title: 'Traversy ‚Äì React Crash Course', url: 'https://www.youtube.com/watch?v=w7ejDZ8SWv8' } ], tasks: ['Counter App'] },
{ id: 10, phase: 'Phase 2', title: 'React: State & useEffect', goals: ['useState', 'useEffect', 'lifecycle c∆° b·∫£n'], resources: [ { title: 'Fullstack Open ‚Äì Part 1', url: 'https://fullstackopen.com/en/part1' } ], tasks: ['Todo App (add/remove)'] },
{ id: 11, phase: 'Phase 2', title: 'Next.js: pages & routing', goals: ['file-based routing', 'linking pages'], resources: [ { title: 'Next.js Docs ‚Äì Getting Started', url: 'https://nextjs.org/docs' } ], tasks: ['Blog 2 trang: Home + About'] },
{ id: 12, phase: 'Phase 2', title: 'TailwindCSS c∆° b·∫£n', goals: ['utility-first', 'responsive classes'], resources: [ { title: 'Tailwind Docs ‚Äì Get Started', url: 'https://tailwindcss.com/docs/installation' } ], tasks: ['Chuy·ªÉn Todo App sang Tailwind'] },
{ id: 13, phase: 'Phase 2', title: 'Fetch API trong React', goals: ['fetch/axios', 'loading/error state'], resources: [ { title: 'JSONPlaceholder', url: 'https://jsonplaceholder.typicode.com/' } ], tasks: ['Danh s√°ch Posts t·ª´ API (loading + error)'] },
{ id: 14, phase: 'Phase 2', title: 'Form & Validation (RHF + Zod)', goals: ['react-hook-form', 'zod resolver'], resources: [ { title: 'React Hook Form ‚Äì Docs', url: 'https://react-hook-form.com/' }, { title: 'Zod ‚Äì Docs', url: 'https://zod.dev/' } ], tasks: ['Form ƒëƒÉng k√Ω v·ªõi validate email'] },
{ id: 15, phase: 'Phase 2', title: 'Mini project: Blog UI (1/2)', goals: ['list/detail', 'layout responsive'], resources: [], tasks: ['Render danh s√°ch b√†i t·ª´ JSON gi·∫£'] },
{ id: 16, phase: 'Phase 2', title: 'Mini project: Blog UI (2/2)', goals: ['ho√†n thi·ªán UI', 'refactor components'], resources: [], tasks: ['Ho√†n thi·ªán Blog UI'] },
{ id: 17, phase: 'Phase 3', title: 'Express c∆° b·∫£n', goals: ['express server', 'routing', 'middleware'], resources: [ { title: 'Express ‚Äì Getting Started', url: 'https://expressjs.com/en/starter/installing.html' } ], tasks: ['/hello ‚Üí { message: "hi" }'] },
{ id: 18, phase: 'Phase 3', title: 'REST API CRUD', goals: ['GET/POST/PUT/DELETE', 'router t·ªï ch·ª©c'], resources: [], tasks: ['Todo API CRUD'] },
{ id: 19, phase: 'Phase 3', title: 'SQL c∆° b·∫£n (PostgreSQL)', goals: ['tables', 'SELECT/INSERT', 'indexes (kh√°i ni·ªám)'], resources: [ { title: 'SQLBolt ‚Äì Lessons', url: 'https://sqlbolt.com/' } ], tasks: ['T·∫°o b·∫£ng users(id, name, email)'] },
{ id: 20, phase: 'Phase 3', title: 'Prisma ORM (CRUD)', goals: ['schema.prisma', 'migrate', 'client CRUD'], resources: [ { title: 'Prisma ‚Äì Getting Started', url: 'https://www.prisma.io/docs/getting-started' } ], tasks: ['CRUD b·∫£ng posts b·∫±ng Prisma'] },
{ id: 21, phase: 'Phase 3', title: 'Auth: JWT login/register', goals: ['bcrypt', 'jwt', 'middleware auth'], resources: [ { title: 'Auth0 ‚Äì JWT Introduction', url: 'https://auth0.com/learn/json-web-tokens/' } ], tasks: ['/auth/login tr·∫£ JWT'] },
{ id: 22, phase: 'Phase 3', title: 'Mini project: Blog API', goals: ['users/posts/comments', 'auth b·∫£o v·ªá route'], resources: [], tasks: ['Ho√†n thi·ªán Blog API'] },
{ id: 23, phase: 'Phase 4', title: 'K·∫øt n·ªëi Frontend ‚Üî Backend', goals: ['fetch t·ª´ Next.js', 'dotenv client'], resources: [], tasks: ['Hi·ªÉn th·ªã posts t·ª´ DB'] },
{ id: 24, phase: 'Phase 4', title: 'Auth integration (UI + token)', goals: ['login/signup UI', 'l∆∞u token', 'header Authorization'], resources: [], tasks: ['ƒêƒÉng nh·∫≠p & l·∫•y profile'] },
{ id: 25, phase: 'Phase 4', title: 'CRUD UI n√¢ng cao', goals: ['form edit', 'optimistic update'], resources: [], tasks: ['Post Editor (create/edit/delete)'] },
{ id: 26, phase: 'Phase 4', title: 'Final: Kanban Lite (DnD)', goals: ['lists/cards', 'drag & drop', 'reorder API'], resources: [ { title: 'dnd-kit ‚Äì Docs', url: 'https://docs.dndkit.com/' } ], tasks: ['Ho√†n thi·ªán Kanban Lite'] },
{ id: 27, phase: 'Phase 5', title: 'Docker ho√° Backend', goals: ['Dockerfile', 'docker-compose', 'env'], resources: [ { title: 'Docker ‚Äì Getting Started', url: 'https://docs.docker.com/get-started/' } ], tasks: ['Ch·∫°y API & Postgres b·∫±ng docker-compose'] },
{ id: 28, phase: 'Phase 5', title: 'Deploy (Vercel + Render/Railway)', goals: ['CI/CD', 'env prod', 'DB cloud (Neon/Supabase)'], resources: [ { title: 'Vercel ‚Äì Deploy', url: 'https://vercel.com/docs' }, { title: 'Railway ‚Äì Getting Started', url: 'https://docs.railway.app/' }, { title: 'Neon ‚Äì Serverless Postgres', url: 'https://neon.tech/' } ], tasks: ['App online, share link üéâ'] },
];

export default curriculum;
